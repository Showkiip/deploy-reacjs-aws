name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup Node.js and npm
        uses: actions/setup-node@v3
       
      - name: Install dependencies and build
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npm install
          npm run build

      - name: Clean up old build on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Remove old files from target directory
            sudo rm -rf /var/www/html/*
            
            # Uncomment this block if using Apache (httpd)
            # Install Apache if not already installed
            # sudo yum install httpd -y || sudo apt-get install apache2 -y
            # Enable Apache service to start on boot
            # sudo systemctl enable httpd || sudo systemctl enable apache2
            # Start or restart Apache service
            # sudo systemctl restart httpd || sudo systemctl restart apache2
            
            # Uncomment this block if using Nginx
            # Install Nginx if not already installed
            # sudo yum install nginx -y || sudo apt-get install nginx -y
            # Enable Nginx service to start on boot
            # sudo systemctl enable nginx
            # Start or restart Nginx service
            # sudo systemctl restart nginx

      - name: Deploy to EC2
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./build/"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
